{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Function composition.\n*\n* @param {...Function} f - functions to compose\n* @throws {Error} must provide more than one argument\n* @throws {TypeError} must provide functions\n* @returns {Function} composite function\n*\n* @example\n* function a( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, 2*x );\n*     }\n* }\n*\n* function b( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x+3 );\n*     }\n* }\n*\n* function c( x, next ) {\n*     setTimeout( onTimeout, 0 );\n*     function onTimeout() {\n*         next( null, x/5 );\n*     }\n* }\n*\n* var f = composeAsync( c, b, a );\n*\n* function done( error, result ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( result );\n*     // => 3\n* }\n*\n* f( 6, done );\n*/\nfunction composeAsync() {\n\tvar nFuncs;\n\tvar f;\n\tvar i;\n\tnFuncs = arguments.length;\n\tif ( nFuncs < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide multiple functions to compose.' );\n\t}\n\tf = new Array( nFuncs );\n\tfor ( i = 0; i < nFuncs; i++ ) {\n\t\tf[ i ] = arguments[ i ];\n\t\tif ( !isFunction( f[ i ] ) ) {\n\t\t\tthrow new TypeError( format( '0iJBQ', f[ i ] ) );\n\t\t}\n\t}\n\treturn composite;\n\n\t/**\n\t* Composite function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @param {Callback} done - callback to invoke after invoking all functions\n\t*/\n\tfunction composite() {\n\t\tvar done;\n\t\tvar args;\n\t\tvar i;\n\n\t\t// Cache the callback function:\n\t\tdone = arguments[ arguments.length-1 ];\n\n\t\t// Copy arguments which should be provided to the first invoked function...\n\t\targs = new Array( arguments.length-1 );\n\t\tfor ( i = 0; i < args.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\t\t// Append the callback an invoked function should call upon completion:\n\t\targs.push( next );\n\n\t\t// Start invoking provided functions:\n\t\ti = nFuncs - 1;\n\t\tf[ i ].apply( null, args );\n\n\t\t/**\n\t\t* Callback invoked upon completion of a composed function.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {*} result - result to pass to next function\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next( error, result ) {\n\t\t\tif ( error ) {\n\t\t\t\treturn done( error );\n\t\t\t}\n\t\t\ti -= 1;\n\t\t\tif ( i < 0 ) {\n\t\t\t\treturn done( null, result );\n\t\t\t}\n\t\t\tf[ i ]( result, next );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default composeAsync;\n"],"names":["composeAsync","nFuncs","f","i","arguments","length","Error","Array","isFunction","TypeError","format","composite","done","args","next","error","result","push","apply"],"mappings":";;uLAsEA,SAASA,IACR,IAAIC,EACAC,EACAC,EAEJ,IADAF,EAASG,UAAUC,QACL,EACb,MAAM,IAAIC,MAAO,uEAGlB,IADAJ,EAAI,IAAIK,MAAON,GACTE,EAAI,EAAGA,EAAIF,EAAQE,IAExB,GADAD,EAAGC,GAAMC,UAAWD,IACdK,EAAYN,EAAGC,IACpB,MAAM,IAAIM,UAAWC,EAAQ,QAASR,EAAGC,KAG3C,OAAOQ,EASP,SAASA,IACR,IAAIC,EACAC,EACAV,EAOJ,IAJAS,EAAOR,UAAWA,UAAUC,OAAO,GAGnCQ,EAAO,IAAIN,MAAOH,UAAUC,OAAO,GAC7BF,EAAI,EAAGA,EAAIU,EAAKR,OAAQF,IAC7BU,EAAMV,GAAMC,UAAWD,GAiBxB,SAASW,EAAMC,EAAOC,GACrB,OAAKD,EACGH,EAAMG,IAEdZ,GAAK,GACI,EACDS,EAAM,KAAMI,QAEpBd,EAAGC,GAAKa,EAAQF,GAtBjBD,EAAKI,KAAMH,GAIXZ,EADAC,EAAIF,EAAS,GACNiB,MAAO,KAAML"}